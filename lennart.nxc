/* Testkod till Lennart
Kor framat, bakat och snurrar
Vonster motor port B
Hoger motor port C
OnFwdSync innebar att motorerna synkroniseras sa att roboten aker rakt,*/

int move_time = 2000; //Forflyttning sker i enheter om 1 s
float turn_constant = 2.35 ; //konstant for kalibrering av turn-funktionen

void turn (int degrees)
/*funktion som far roboten att pa stallet rotera givet antal grader medurs
Anvand negativt tal for rotation moturs*/
{
 if (degrees > 0) { //sväng medurs om angiven vinkel positiv
    OnFwd (OUT_B, 100);  //v motor framåt
    OnRev (OUT_C, 100);   //h motor bakåt
 }
 else {   //sväng moturs om vinkeln negativ
      OnFwd (OUT_C, 100); //h motor framåt
      OnRev (OUT_B, 100); //v motor bakåt
 }
 Wait(degrees*turn_constant); //anger rotationstiden, turn_constant måste kalibreras
 Off (OUT_BC); //sluta rotera
}

void detect () { //Procedur som får Lennart att stanna och stsöka efter motståndare
     SetSensorLowspeed (IN_3);
     Off (OUT_BC); //stanna
     while (SensorUS(IN_3)>30) { //rotera tills motstandare hittas
     turn (10);
     }
}

void demonstration () {  //procedur för demonstration
     Wait (2000);
     OnFwdSync (OUT_BC, 50, 0); //Kor framat, halv hastighet, ingen svang
     Wait (move_time); //Fortsatter kora en tidsenhet
     OnRevSync (OUT_BC, 50, 0); //Backar, halv hastighet, ingen svang
     Wait (move_time);
     Off (OUT_BC); //Stanna
     turn (360); //Rotera pa stallet
}

task main () //Huvudtask, det roboten ska gora. Flera tasks kan koras parallellt
{
     bool combat = TRUE;
     while (combat == TRUE){
           detect();
           SetSensorLight(IN_4);
           OnFwdSync (OUT_BC,100,0);
           if (Sensor(IN_4)<Threshold){
           Off (OUT_BC);
           OnRevSync (OUT_BC,100,0);
           }
           Wait (move_time);
           Off (OUT_BC);
     }
}

